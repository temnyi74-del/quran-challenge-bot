# quran_bot.py
import asyncio
import logging
import os
from datetime import datetime, timedelta, time, timezone
from aiohttp import web
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message

# ‚îÄ‚îÄ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# ‚îÄ‚îÄ –ö–æ–Ω—Ñ–∏–≥ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
BOT_TOKEN = os.getenv("BOT_TOKEN")                 # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
GROUP_ID = int(os.getenv("GROUP_ID", "0"))         # id –≥—Ä—É–ø–ø—ã (—Å–æ –∑–Ω–∞–∫–æ–º -100...)
TIMEZONE_OFFSET = int(os.getenv("TZ_OFFSET", "5")) # —Å–º–µ—â–µ–Ω–∏–µ –æ—Ç UTC, –Ω–∞–ø—Ä. –ß–µ–ª—è–±–∏–Ω—Å–∫ = +5

if not BOT_TOKEN or GROUP_ID == 0:
    raise RuntimeError("–ù—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å BOT_TOKEN –∏ GROUP_ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# ‚îÄ‚îÄ –†–µ–∞–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Ñ–æ—Ç–æ –≤ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø–µ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@dp.message(F.chat.id == GROUP_ID, F.photo)
async def handle_photo(message: Message):
    try:
        await message.answer("ÿ®ÿßÿ±ŸÉ ÿßŸÑŸÑŸá ŸÅŸäŸÉ\n–ü—É—Å—Ç—å –ê–ª–ª–∞—Ö –ø—Ä–∏–º–µ—Ç,\nÿ¢ŸÖŸäŸÜ ü§≤")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {e}")

# ‚îÄ‚îÄ 30 –º–æ—Ç–∏–≤–∞—à–µ–∫ (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫, –ø–æ –æ–¥–Ω–æ–π –≤ –¥–µ–Ω—å) ‚îÄ‚îÄ
MOTIVATIONS = [
    "–°–µ–≥–æ–¥–Ω—è –Ω–µ –≤—Å–µ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å. –î–∞–≤–∞–π—Ç–µ –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ–º –∞–∫—Ç–∏–≤–Ω–µ–µ, –∏–Ω —à–∞ –ê–ª–ª–∞—Ö!",
    "–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —á—Ç–µ–Ω–∏–µ –ö–æ—Ä–∞–Ω–∞ ‚Äî —ç—Ç–æ —Å–≤–µ—Ç –≤ —Å–µ—Ä–¥—Ü–µ.",
    "–ê–ª–ª–∞—Ö –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ —Å—Ç–∞—Ä–∞–µ—Ç—Å—è —Ä–∞–¥–∏ –ù–µ–≥–æ.",
    "–ö—Ç–æ –¥–µ—Ä–∂–∏—Ç—Å—è –∑–∞ –ö–æ—Ä–∞–Ω ‚Äî —Ç–æ—Ç –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±–ª—É–¥–∏—Ç—Å—è.",
    "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å –ö–æ—Ä–∞–Ω–æ–º ‚Äî –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –†–∞—é.",
    "–ü—É—Å—Ç—å –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ –±–∞—Ä—Ä–∞–∫—è—Ç–∞ –≤ –Ω–∞—à–∏—Ö —Å—Ç–∞—Ä–∞–Ω–∏—è—Ö.",
    "–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —É–∫—Ä–µ–ø–∏–º –Ω–∞—à—É —Å–≤—è–∑—å —Å –ö–Ω–∏–≥–æ–π –ê–ª–ª–∞—Ö–∞.",
    "¬´–í–æ–∏—Å—Ç–∏–Ω—É, —ç—Ç–∏–º –ö–æ—Ä–∞–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –û–Ω, –∫–æ–≥–æ –ø–æ–∂–µ–ª–∞–µ—Ç¬ª (39:23).",
    "–° –∫–∞–∂–¥—ã–º –∞—è—Ç–æ–º –ø—Ä–∏–±–ª–∏–∂–∞–µ–º—Å—è –∫ –¥–æ–≤–æ–ª—å—Å—Ç–≤—É –ê–ª–ª–∞—Ö–∞.",
    "–ó–∞–≤—Ç—Ä–∞ ‚Äî –µ—â—ë –æ–¥–∏–Ω —à–∞–Ω—Å –ø—Ä–æ—è–≤–∏—Ç—å —É—Å–µ—Ä–¥–∏–µ.",
    "–ö–æ—Ä–∞–Ω ‚Äî –ª—É—á—à–∏–π –¥—Ä—É–≥ –∏ –ø–æ–º–æ—â–Ω–∏–∫ –≤ —ç—Ç–æ–º –º–∏—Ä–µ –∏ –≤ –ê—Ö–∏—Ä–∞.",
    "–ö—Ç–æ —á–∏—Ç–∞–µ—Ç –ö–æ—Ä–∞–Ω ‚Äî –Ω–∞–ø–æ–ª–Ω—è–µ—Ç —Å–µ—Ä–¥—Ü–µ —Å–≤–µ—Ç–æ–º.",
    "–ê–ª–ª–∞—Ö –≤–æ–∑–≤—ã—à–∞–µ—Ç –ª—é–¥–µ–π —á–µ—Ä–µ–∑ –ö–æ—Ä–∞–Ω.",
    "–£—Å–µ—Ä–¥–∏–µ —Å–µ–≥–æ–¥–Ω—è ‚Äî –Ω–∞–≥—Ä–∞–¥–∞ –≤ –°—É–¥–Ω—ã–π –¥–µ–Ω—å.",
    "–°–ª–æ–≤–æ –ê–ª–ª–∞—Ö–∞ ‚Äî –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –¥–ª—è –¥—É—à –∏ —Å–µ—Ä–¥–µ—Ü.",
    "–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ –ê–ª–ª–∞—Ö—É —á–µ—Ä–µ–∑ —á—Ç–µ–Ω–∏–µ.",
    "–ö–æ—Ä–∞–Ω –≤–µ–¥—ë—Ç –∫ —Å—á–∞—Å—Ç—å—é –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—é.",
    "–ü—É—Å—Ç—å –Ω–∞—à–∏ —Å–µ—Ä–¥—Ü–∞ –±—É–¥—É—Ç –º—è–≥–∫–∏–º–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –ö–æ—Ä–∞–Ω—É.",
    "–ê–ª–ª–∞—Ö –æ–±–ª–µ–≥—á–∏—Ç –ø—É—Ç—å –≤ –†–∞–π —Ç–µ–º, –∫—Ç–æ —É—á–∏—Ç –ö–æ—Ä–∞–Ω.",
    "–ö–∞–∂–¥–æ–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ ‚Äî —ç—Ç–æ –Ω–∞–≥—Ä–∞–¥–∞.",
    "–ü—É—Å—Ç—å –ö–æ—Ä–∞–Ω –±—É–¥–µ—Ç –Ω–∞—à–∏–º –∑–∞—Å—Ç—É–ø–Ω–∏–∫–æ–º –≤ –°—É–¥–Ω—ã–π –¥–µ–Ω—å.",
    "–ù–µ—Ç —É—Å—Ç–∞–ª–æ—Å—Ç–∏, –∫–æ–≥–¥–∞ —Ä—è–¥–æ–º –ö–æ—Ä–∞–Ω.",
    "–ê–ª–ª–∞—Ö –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø—É—Ç–∏ —Ç–µ–º, –∫—Ç–æ –¥–µ—Ä–∂–∏—Ç—Å—è –∑–∞ –ï–≥–æ –ö–Ω–∏–≥—É.",
    "–°–ª–æ–≤–∞ –ê–ª–ª–∞—Ö–∞ —Å–∏–ª—å–Ω–µ–µ –ª—é–±—ã—Ö —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π.",
    "–ö–æ—Ä–∞–Ω —É–∫—Ä–µ–ø–ª—è–µ—Ç –∏–º–∞–Ω –∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ.",
    "–ö–∞–∂–¥—ã–π –∞—è—Ç ‚Äî –æ–±—Ä–∞—â–µ–Ω–∏–µ –í—Å–µ–≤—ã—à–Ω–µ–≥–æ –∫ —Ç–µ–±–µ.",
    "–ê–ª–ª–∞—Ö –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ –æ—á–∏—â–∞–µ—Ç —Å–µ—Ä–¥—Ü–µ –ö–æ—Ä–∞–Ω–æ–º.",
    "–ù–µ –ø–æ–∑–≤–æ–ª—è–π –¥–Ω—é –ø—Ä–æ–π—Ç–∏ –±–µ–∑ –∞—è—Ç–æ–≤ –ö–æ—Ä–∞–Ω–∞.",
    "–ö–æ—Ä–∞–Ω ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–∏–ª—ã –∏ —Ç–µ—Ä–ø–µ–Ω–∏—è.",
    "–í –∫–∞–∂–¥–æ–º –¥–Ω–µ –Ω–∞–π–¥–∏ –º–∏–Ω—É—Ç—É –¥–ª—è –ö–æ—Ä–∞–Ω–∞ ‚Äî –∏ —É–≤–∏–¥–∏—à—å –±–∞—Ä—Ä–∞–∫–∞—Ç.",
]

def local_now() -> datetime:
    """–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ø–æ —Ç–≤–æ–µ–º—É —Å–º–µ—â–µ–Ω–∏—é (UTC+OFFSET)."""
    return datetime.now(timezone.utc) + timedelta(hours=TIMEZONE_OFFSET)

def next_time(hour: int, minute: int = 0) -> datetime:
    """–ë–ª–∏–∂–∞–π—à–µ–µ –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è H:M –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞."""
    now = local_now()
    target = datetime(now.year, now.month, now.day, hour, minute, tzinfo=now.tzinfo)
    if now >= target:
        target += timedelta(days=1)
    return target

def rotation_index_for_day(d: datetime) -> int:
    """–ò–Ω–¥–µ–∫—Å –º–æ—Ç–∏–≤–∞—à–∫–∏: —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –ø–æ –¥–Ω—é, –∏–¥—ë–º –ø–æ –ø–æ—Ä—è–¥–∫—É, –ø–æ—Ç–æ–º —Ü–∏–∫–ª."""
    return d.toordinal() % len(MOTIVATIONS)

async def daily_motivation_loop():
    """–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 22:00 –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Å–º–µ—â–µ–Ω–∏—é –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—à–∫—É ‚Ññi."""
    while True:
        try:
            target = next_time(22, 0)  # 22:00 –ª–æ–∫–∞–ª—å–Ω–æ
            sleep_sec = (target - local_now()).total_seconds()
            logger.info(f"–°–ª–µ–¥—É—é—â–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ {target}, —á–µ—Ä–µ–∑ {sleep_sec} —Å–µ–∫—É–Ω–¥")
            
            await asyncio.sleep(max(0, sleep_sec))

            idx = rotation_index_for_day(local_now())
            text = MOTIVATIONS[idx]
            
            await bot.send_message(GROUP_ID, text)
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ—Ç–∏–≤–∞—Ü–∏—è #{idx+1}")
            
            # –ñ–¥—ë–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
            await asyncio.sleep(60)  # –Ω–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –º–æ—Ç–∏–≤–∞—Ü–∏–∏: {e}")
            await asyncio.sleep(3600)  # –∂–¥—ë–º —á–∞—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ

# ‚îÄ‚îÄ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@dp.message(F.chat.type == "private", F.text == "/start")
async def start_command(message: Message):
    await message.answer("–ê—Å—Å–∞–ª–∞–º—É –∞–ª–µ–π–∫—É–º! –Ø –±–æ—Ç –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ —á—Ç–µ–Ω–∏–∏ –ö–æ—Ä–∞–Ω–∞.")

# ‚îÄ‚îÄ –ó–∞–ø—É—Å–∫ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def main():
    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –º–æ—Ç–∏–≤–∞—à–µ–∫
    asyncio.create_task(daily_motivation_loop())
    # –°—Ç–∞—Ä—Ç –ø–æ–ª–ª–∏–Ω–≥–∞
    await dp.start_polling(bot)

# == HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –∑–∞—Å—ã–ø–∞–ª ==
async def handle(request):
    return web.Response(text="Bot is alive")

def start_web():
    app = web.Application()
    app.router.add_get("/", handle)
    web.run_app(app, port=int(os.environ.get("PORT", 8080)))
    
if __name__ == "__main__":
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ (—á—Ç–æ–±—ã Render –Ω–µ —É—Å—ã–ø–ª—è–ª)
        from threading import Thread
        Thread(target=start_web).start()

        # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
