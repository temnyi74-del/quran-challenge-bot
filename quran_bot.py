import asyncio
import logging
import os
from datetime import datetime, time, timedelta

from aiogram import Bot, Dispatcher, F
from aiogram.types import Message

logging.basicConfig(level=logging.INFO)

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ====
BOT_TOKEN = os.getenv("BOT_TOKEN")  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
GROUP_ID = int(os.getenv("GROUP_ID"))  # id –≥—Ä—É–ø–ø—ã (—Å–æ –∑–Ω–∞–∫–æ–º -100...)
TIMEZONE_OFFSET = 5  # —Ç–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ UTC (–Ω–∞–ø—Ä–∏–º–µ—Ä +5)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# ==== 30 –º–æ—Ç–∏–≤–∞—à–µ–∫ ====
MOTIVATIONS = [
    "–°–µ–≥–æ–¥–Ω—è –Ω–µ –≤—Å–µ –æ—Ç–º–µ—Ç–∏–ª–∏—Å—å. –î–∞–≤–∞–π—Ç–µ –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ–º –∞–∫—Ç–∏–≤–Ω–µ–µ, –∏–Ω —à–∞ –ê–ª–ª–∞—Ö!",
    "–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —á—Ç–µ–Ω–∏–µ –ö–æ—Ä–∞–Ω–∞ ‚Äî —ç—Ç–æ —Å–≤–µ—Ç –≤ —Å–µ—Ä–¥—Ü–µ üåô",
    "–ê–ª–ª–∞—Ö –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ —Å—Ç–∞—Ä–∞–µ—Ç—Å—è —Ä–∞–¥–∏ –ù–µ–≥–æ ü§≤",
    "–ö—Ç–æ –¥–µ—Ä–∂–∏—Ç—Å—è –∑–∞ –ö–æ—Ä–∞–Ω ‚Äî —Ç–æ—Ç –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞–±–ª—É–¥–∏—Ç—Å—è üìñ",
    "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å –ö–æ—Ä–∞–Ω–æ–º ‚Äî –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ –∫ –†–∞—é üåø",
    "–ü—É—Å—Ç—å –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ –±–∞—Ä—Ä–∞–∫—è—Ç–∞ –≤ –Ω–∞—à–∏—Ö —Å—Ç–∞—Ä–∞–Ω–∏—è—Ö üå∏",
    "–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —É–∫—Ä–µ–ø–∏–º –Ω–∞—à—É —Å–≤—è–∑—å —Å –ö–Ω–∏–≥–æ–π –ê–ª–ª–∞—Ö–∞ üíé",
    "–ê–ª–ª–∞—Ö –≥–æ–≤–æ—Ä–∏—Ç: '–í–æ–∏—Å—Ç–∏–Ω—É, —ç—Ç–∏–º –ö–æ—Ä–∞–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –û–Ω –∫–æ–≥–æ –ø–æ–∂–µ–ª–∞–µ—Ç' (39:23)",
    "–° –∫–∞–∂–¥—ã–º –∞—è—Ç–æ–º –ø—Ä–∏–±–ª–∏–∂–∞–µ–º—Å—è –∫ –¥–æ–≤–æ–ª—å—Å—Ç–≤—É –ê–ª–ª–∞—Ö–∞ üåπ",
    "–ó–∞–≤—Ç—Ä–∞ –µ—â—ë –æ–¥–∏–Ω —à–∞–Ω—Å –ø—Ä–æ—è–≤–∏—Ç—å —É—Å–µ—Ä–¥–∏–µ üí™",
    "–ö–æ—Ä–∞–Ω ‚Äî –ª—É—á—à–∏–π –¥—Ä—É–≥ –∏ –ø–æ–º–æ—â–Ω–∏–∫ –≤ —ç—Ç–æ–º –º–∏—Ä–µ –∏ –≤ –ê—Ö–∏—Ä–∞ üåç",
    "–ö—Ç–æ —á–∏—Ç–∞–µ—Ç –ö–æ—Ä–∞–Ω ‚Äî —Ç–æ—Ç –Ω–∞–ø–æ–ª–Ω—è–µ—Ç —Å–µ—Ä–¥—Ü–µ —Å–≤–µ—Ç–æ–º ‚ú®",
    "–ê–ª–ª–∞—Ö –≤–æ–∑–≤—ã—à–∞–µ—Ç –ª—é–¥–µ–π —á–µ—Ä–µ–∑ –ö–æ—Ä–∞–Ω üïå",
    "–£—Å–µ—Ä–¥–∏–µ —Å–µ–≥–æ–¥–Ω—è ‚Äî –Ω–∞–≥—Ä–∞–¥–∞ –≤ –°—É–¥–Ω—ã–π –¥–µ–Ω—å üåü",
    "–°–ª–æ–≤–æ –ê–ª–ª–∞—Ö–∞ ‚Äî –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –¥–ª—è –¥—É—à –∏ —Å–µ—Ä–¥–µ—Ü ‚ù§Ô∏è",
    "–ù–µ —Ç–µ—Ä—è–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–±–ª–∏–∑–∏—Ç—å—Å—è –∫ –ê–ª–ª–∞—Ö—É —á–µ—Ä–µ–∑ —á—Ç–µ–Ω–∏–µ üìñ",
    "–ö–æ—Ä–∞–Ω –≤–µ–¥—ë—Ç –∫ —Å—á–∞—Å—Ç—å—é –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—é üïäÔ∏è",
    "–ü—É—Å—Ç—å –Ω–∞—à–∏ —Å–µ—Ä–¥—Ü–∞ –±—É–¥—É—Ç –º—è–≥–∫–∏–º–∏ –±–ª–∞–≥–æ–¥–∞—Ä—è –ö–æ—Ä–∞–Ω—É üå∑",
    "–ê–ª–ª–∞—Ö –æ–±–ª–µ–≥—á–∏—Ç –ø—É—Ç—å –≤ –†–∞–π —Ç–µ–º, –∫—Ç–æ —É—á–∏—Ç –ö–æ—Ä–∞–Ω üåº",
    "–ö–∞–∂–¥–æ–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ ‚Äî —ç—Ç–æ –Ω–∞–≥—Ä–∞–¥–∞ üå∫",
    "–ü—É—Å—Ç—å –ö–æ—Ä–∞–Ω –±—É–¥–µ—Ç –Ω–∞—à–∏–º –∑–∞—Å—Ç—É–ø–Ω–∏–∫–æ–º –≤ –°—É–¥–Ω—ã–π –¥–µ–Ω—å üåô",
    "–ù–µ—Ç —É—Å—Ç–∞–ª–æ—Å—Ç–∏, –∫–æ–≥–¥–∞ —Ä—è–¥–æ–º –ö–æ—Ä–∞–Ω üåø",
    "–ê–ª–ª–∞—Ö –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø—É—Ç–∏ —Ç–µ–º, –∫—Ç–æ –¥–µ—Ä–∂–∏—Ç—Å—è –∑–∞ –ï–≥–æ –ö–Ω–∏–≥—É üö™",
    "–°–ª–æ–≤–∞ –ê–ª–ª–∞—Ö–∞ —Å–∏–ª—å–Ω–µ–µ –ª—é–±—ã—Ö —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π üí™",
    "–ö–æ—Ä–∞–Ω —É–∫—Ä–µ–ø–ª—è–µ—Ç –∏–º–∞–Ω –∏ –ø—Ä–∏–Ω–æ—Å–∏—Ç —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ üå∏",
    "–ö–∞–∂–¥—ã–π –∞—è—Ç ‚Äî —ç—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –í—Å–µ–≤—ã—à–Ω–µ–≥–æ –∫ —Ç–µ–±–µ ‚ú®",
    "–ê–ª–ª–∞—Ö –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ –æ—á–∏—â–∞–µ—Ç —Å–≤–æ—ë —Å–µ—Ä–¥—Ü–µ –ö–æ—Ä–∞–Ω–æ–º üíñ",
    "–ù–µ –ø–æ–∑–≤–æ–ª—è–π –¥–Ω—é –ø—Ä–æ–π—Ç–∏ –±–µ–∑ –∞—è—Ç–æ–≤ –ö–æ—Ä–∞–Ω–∞ üåÖ",
    "–ö–æ—Ä–∞–Ω ‚Äî –∏—Å—Ç–æ—á–Ω–∏–∫ —Å–∏–ª—ã –∏ —Ç–µ—Ä–ø–µ–Ω–∏—è üåü",
    "–í –∫–∞–∂–¥–æ–º –¥–Ω–µ –∏—â–∏ –º–∏–Ω—É—Ç—É –¥–ª—è –ö–æ—Ä–∞–Ω–∞ ‚Äî –∏ —É–≤–∏–¥–∏—à—å –±–∞—Ä—Ä–∞–∫–∞—Ç üåº",
]

# –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –º–æ—Ç–∏–≤–∞—à–∫–∏
motivation_index = 0

# ==== –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Ñ–æ—Ç–æ ====
@dp.message()
async def handle_message(message: types.Message):
    if message.chat.id == GROUP_ID and message.photo:
        name = message.from_user.full_name or message.from_user.first_name or "–±—Ä–∞—Ç"
        await message.reply(f"""ÿ®ÿßÿ±ŸÉ ÿßŸÑŸÑŸá ŸÅŸäŸÉ 
–ü—É—Å—Ç—å –ê–ª–ª–∞h –ø—Ä–∏–º–µ—Ç, 
ÿ¢ŸÖŸäŸÜ ü§≤""")

# ==== –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –º–æ—Ç–∏–≤–∞—à–µ–∫ ====
async def send_motivation():
    global motivation_index
    while True:
        now = datetime.utcnow() + timedelta(hours=TIMEZONE_OFFSET)
        target = datetime.combine(now.date(), time(22, 0))  # –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 22:00
        if now > target:
            target += timedelta(days=1)
        wait_seconds = (target - now).total_seconds()
        await asyncio.sleep(wait_seconds)

        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ—Ç–∏–≤–∞—à–∫—É –ø–æ –ø–æ—Ä—è–¥–∫—É
        motivation = MOTIVATIONS[motivation_index]
        try:
            await bot.send_message(GROUP_ID, motivation)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ—Ç–∏–≤–∞—à–∫–∏: {e}")

        # –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π, –µ—Å–ª–∏ –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Å 0
        motivation_index = (motivation_index + 1) % len(MOTIVATIONS)

# ==== Main ====
async def main():
    asyncio.create_task(send_motivation())
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
